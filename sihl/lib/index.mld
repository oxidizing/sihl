{0 Sihl}

Sihl is a framework for building applications with OCaml and Reason.

{1 Overview}

These are the main parts of Sihl:

- {b Set of libraries}: The OCaml ecosystem has many wonderful libraries that are often wrappers around battle tested C libraries. Sihl provides a consistent API on top with sane defaults for web development. Examples are: base64 encoded random byte generation, JWT encoding/decoding, BCrypt hashing, UUID generation.
- {b Architecture}: TODO
- {b Interfaces and default implementations}: TODO (tiny core, only services)

{2 Philosophy}

- developer fun
- tiny core, everything is an extension
- modularity through decoupled components
- minimize magic, maximize explicitness
- sane defaults, powerful customizations

{2 Features}

{1 Installation}
{2 OPAM}
{2 Esy}
TODO
{2 Nix}
TODO

{1 Tutorial}

{2 1. Your first Sihl app}

- introduce folder structure
- separating http/cli from actual application

{2 2. Your first Test}

{2 3. Your first Use Case}
- create test for use case
- create use case, use first
- authz
- service, repo, model

{2 4. Your first JSON API}

{2 5. Your first Website}

{2 5. Your first CLI Command}

{2 6. Your first Migration}

- add web stuff: site and json endpoint
- add cli interface

{2 7. Launch your app ðŸš€}

- production settings
- build dockerfile

{1 Concepts}
{2 Option, Result and Lwt.t}
{2 App Architecture}
{3 Use Case }
{3 Service}
{3 Repository}
{3 Model}
{3 Job}
{3 Web & Command Line}
{2 Extending Sihl}
{3 Middleware}
{3 Service}

{1 Web}
{2 Routing}
{2 Middleware}
{2 Cookie}
{2 Session}
{2 Message}
{2 Authentication}
{2 Query}
{2 Template}
{2 CSRF}
{2 Error Handling}
{2 JSON}
{2 JSON Web Token}
{1 Command Line}
{1 Service}
{2 Container}
{2 Context}
{2 Atomicity}
{1 Repository}
{2 Migration}
{2 Query}
{2 Meta Data}
{1 Testing}
{2 Unit Testing}
{2 Use Case & Service Testing}
{2 End-to-End Testing}
{1 Authorization}
{2 Use Guards}
{2 Define Guards}
{1 Email}
{1 Session}
{1 Admin UI}
{1 Block Storage}
{1 Job Queue}
{1 Scheduler}
{1 Cache}
{1 XLSX & CSV}
{1 PDF}
{1 Secret}

{1 Recipes}
{2 Add pagination and sorting to a list of things}
{2 Add filtering to a list of things}
{2 Schedule PDF exports}
{2 End-to-End testing "password reset workflow"}
{2 Share moddel business logic with a ReasonReact app}
{2 Create a middleware that measures the request/response time}

{1 Sihl Development}
