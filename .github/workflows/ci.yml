name: CI
on: [push, pull_request]

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dev
        ports:
          - 5432:5432
      mariadb:
        image: mariadb:10.3
        env:
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: dev
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
        ports:
          - 3306:3306
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-version:
          - 4.11.1
          - 4.10.1
          - 4.09.1
          - 4.08.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Retrieve opam cache
        uses: actions/cache@v2
        if: runner.os != 'Windows'
        id: cache-opam
        with:
          path: ~/.opam
          key: v1-${{ runner.os }}-opam-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam.locked') }}
          restore-keys: |
            v2-${{ runner.os }}-opam-${{ matrix.ocaml-version }}-

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Update opam repository
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: opam update

      - name: Pin package
        run: opam pin add . --yes --no-action

      - name: Query and install external dependencies
        run: |
          sudo apt-get update -y
          opam depext sihl sihl-user sihl-storage sihl-email sihl-queue sihl-cache sihl-token --yes --with-test

      - name: Install dependencies
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: |
          OPAMSOLVERTIMEOUT=300 opam install . --deps-only --with-doc --with-test --locked --unlock-base
          sudo apt-get update -y
          opam install ocamlformat odoc --skip-updates

      - name: Upgrade dependencies
        run: opam upgrade --fixup
        if: steps.cache-opam.outputs.cache-hit == 'true'

      - name: Build
        run: make build

      - name: Check formatting
        run: make format

      - name: Build docs
        run: make doc

      - name: Run tests
        run: make test-all

      - name: Pin current Sihl
        run: opam pin add sihl .

      - name: Generate PostgreSQL model
        run: |
          cd template
          ROOT_PATH=. LOGS_DIR=. make sihl gen.model postgresql employee title:string is_premium:bool age:int shipped_at:datetime
          DATABASE_URL=postgres://admin:password@127.0.0.1:5432/dev ENV_FILES_PATH=. ROOT_PATH=. LOGS_DIR=. make test

      - name: Generate MariaDB model
        run: |
          cd template
          rm -r app/domain/employee database/employee.ml test/employee
          ROOT_PATH=. LOGS_DIR=. make sihl gen.model mariadb employee title:string is_premium:bool age:int shipped_at:datetime
          echo "module Migration = Sihl.Database.Migration.MariaDb" > service/service.ml
          echo "(executable (name run) (libraries sihl service routes database schedule command caqti-driver-mariadb))" > run/dune
          opam install caqti-driver-mariadb
          DATABASE_URL=mariadb://admin:password@127.0.0.1:3306/dev ENV_FILES_PATH=. ROOT_PATH=. LOGS_DIR=. make test
